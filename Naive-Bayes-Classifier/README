In my implementation, I will use only one script to do everything.

To use command line, there are three different format:
1.	>> python nbc.py DataFilename classLabelIndex

    This is the command line that splits one dataset into training set and testing set(10%, 50%, 90%), and predict labels in testing set using baseline scoring function 10 times for each proportion of split. It will then print out the mean and stdev of baseline scores.
	
	Example: >> python nbc.py funny_data.csv 5
	
2.	>> python nbc.py DataFilename classLabelIndex printTopWords

	This is the command line that splits one dataset into training set and testing set(10%, 50%, 90%), and build a model of NaiveBayes classifier on training set. It then uses this model on testing set, and uses 0-1 loss as the scoring function. It will do this 10 times on each proportion of split and print the mean and stdev of 0-1 loss for each proportion. The argument "printTopWords" has to be either 0 or 1.
	
	Example: >> python nbc.py funny_data.csv 5 1
	
3.	>> python nbc.py trainingDataFilename testingDataFilename classLabelIndex printTopWords

	This is the command line that trains NBC model on training data and test the model on testing data. It will print the 0-1 loss directly.
	
	Example: >> python nbc.py funny_data.csv stars_data.csv 5 1
	(I use stars_data.csv since I don't have any other files to be the testing set)